image: node:14.15.1

# Only run pipelines for merge requests or default branch or tag
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - build
  - docker
  - deploy

cache:
  key:
    files:
      - package.json
  paths:
    - node_modules

install-dependencies:
  stage: .pre
  script: yarn install
  rules:
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - package.json
        - yarn.lock

lint:
  stage: build
  script: yarn lint

build:
  stage: build
  script: yarn build

# api-unit-tests:
#   script: yarn ci:test api --skip-nx-cache
#   artifacts:
#     reports:
#       cobertura: coverage/apps/api/cobertura-coverage.xml
#   after_script:
#     - bash <(curl -s https://codecov.io/bash) -f coverage/apps/api/cobertura-coverage.xml

ui-unit-tests:
  stage: build
  script: yarn test
  artifacts:
    reports:
      cobertura: coverage/ui/cobertura-coverage.xml
  after_script:
    - bash <(curl -s https://codecov.io/bash) -f coverage/ui/cobertura-coverage.xml

dockerize:
  stage: docker
  image: docker:19
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo ******************** Build Node Server Docker Image ********************
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest-node-server" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:latest-node-server"

staging:
  stage: deploy
  trigger:
    project: wshowair/portfolio-devops
    strategy: depend
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
